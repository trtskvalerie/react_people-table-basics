{"version":3,"sources":["api/people.ts","components/PersonRow/index.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/index.ts","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/index.ts","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/index.ts","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","response","json","PersonRow","person","className","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","slug","Loader","PeoplePage","useState","setPeople","isLoading","setLoading","useEffect","then","peopleFromServer","mother","find","parent","father","findParents","NotFoundPage","App","to","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"gUAEaA,EAAS,uCAAG,4BAAAC,EAAA,+EAEEC,MAAM,GAAD,OAJhB,sEAES,cAEfC,EAFe,gBAIRA,EAASC,OAJD,iGAMd,IANc,yDAAH,qD,qBCAPC,ECM2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,qBAAIC,UAAU,SAAd,UACE,oBAAIA,UAAU,eAAd,SAA8BD,EAAOE,OACrC,oBAAID,UAAU,eAAd,SAA8BD,EAAOG,MACrC,oBAAIF,UAAU,eAAd,SAA8BD,EAAOI,OACrC,oBAAIH,UAAU,eAAd,SAA8BD,EAAOK,OACrC,oBAAIJ,UAAU,eAAd,SAA8BD,EAAOM,aACrC,oBAAIL,UAAU,eAAd,SAA8BD,EAAOO,iBCb1BC,ECQ6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,wBAAOR,UAAU,cAAjB,UACE,gCACE,qBAAIA,UAAU,sBAAd,UACE,oBAAIA,UAAU,oBAAd,kBACA,oBAAIA,UAAU,oBAAd,iBACA,oBAAIA,UAAU,oBAAd,kBACA,oBAAIA,UAAU,oBAAd,kBACA,oBAAIA,UAAU,oBAAd,2BACA,oBAAIA,UAAU,oBAAd,gCAGJ,gCACGQ,EAAOC,KAAI,SAAAV,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOW,eCrBlCC,G,MAAmB,kBAC9B,qBAAKX,UAAU,SAAf,SACE,qBAAKA,UAAU,wBCHJY,ECYqB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAAgCD,oBAAS,GAAzC,mBAAOE,EAAP,KAAkBC,EAAlB,KAWA,OATAC,qBAAU,WACRxB,IACGyB,MAAK,SAAAC,GAAgB,OAdR,SAACX,GACnB,OAAOA,EAAOC,KAAI,SAAAV,GAAM,kCACnBA,GADmB,IAEtBqB,OAAQZ,EAAOa,MAAK,SAAAC,GAAM,OAAIA,EAAOrB,OAASF,EAAOM,eAAe,KACpEkB,OAAQf,EAAOa,MAAK,SAAAC,GAAM,OAAIA,EAAOrB,OAASF,EAAOO,eAAe,UAUxCkB,CAAYL,MACrCD,MAAK,SAAAC,GACJL,EAAUK,GACVH,GAAW,QAEd,IAGD,qCACE,8CACCD,EACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAaP,OAAQA,QC9BhBiB,ECAuB,kBACpC,iDC0BaC,EAnBO,kBACpB,sBAAK1B,UAAU,MAAf,UACE,iCACE,gCACE,cAAC,IAAD,CAAM2B,GAAG,QAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,yBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,6CACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAE9B,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUF,GAAG,IAAIG,SAAO,MACpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,aCnB/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91bac193.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  try {\n    const response = await fetch(`${API_URL}`);\n\n    return await response.json();\n  } catch (error) {\n    return [];\n  }\n};\n","import { PersonRow } from './PersonRow';\n\nexport default PersonRow;\n","import React from 'react';\n\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr className=\"Person\">\n    <td className=\"Person__cell\">{person.name}</td>\n    <td className=\"Person__cell\">{person.sex}</td>\n    <td className=\"Person__cell\">{person.born}</td>\n    <td className=\"Person__cell\">{person.died}</td>\n    <td className=\"Person__cell\">{person.motherName}</td>\n    <td className=\"Person__cell\">{person.fatherName}</td>\n  </tr>\n);\n","import { PeopleTable } from './PeopleTable';\n\nexport default PeopleTable;\n","import React from 'react';\n\nimport './PeopleTable.scss';\n\nimport PersonRow from '../PersonRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr className=\"PeopleTable__header\">\n        <th className=\"PeopleTable__cell\">Name</th>\n        <th className=\"PeopleTable__cell\">Sex</th>\n        <th className=\"PeopleTable__cell\">Born</th>\n        <th className=\"PeopleTable__cell\">Died</th>\n        <th className=\"PeopleTable__cell\">Mother&apos;s name</th>\n        <th className=\"PeopleTable__cell\">Father&apos;s name</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow person={person} key={person.slug} />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { PeoplePage } from './PeoplePage';\n\nexport default PeoplePage;\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api/people';\n\nimport PeopleTable from '../PeopleTable';\nimport { Loader } from '../Loader';\n\nconst findParents = (people: Person[]): Person[] => {\n  return people.map(person => ({\n    ...person,\n    mother: people.find(parent => parent.name === person.motherName) || null,\n    father: people.find(parent => parent.name === person.fatherName) || null,\n  }));\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => findParents(peopleFromServer))\n      .then(peopleFromServer => {\n        setPeople(peopleFromServer);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1>People table</h1>\n      {isLoading\n        ? <Loader />\n        : <PeopleTable people={people} />}\n    </>\n  );\n};\n","import { NotFoundPage } from './NotFoundPage';\n\nexport default NotFoundPage;\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1>Page not found</h1>\n);\n","import React from 'react';\nimport {\n  Routes, Route, Link, Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\n\nimport PeoplePage from './components/PeoplePage';\nimport NotFoundPage from './components/NotFoundPage';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <header>\n      <nav>\n        <Link to=\"/home\">Home</Link>\n        <Link to=\"/people\">People</Link>\n      </nav>\n    </header>\n\n    <Routes>\n      <Route path=\"/\" element={<h1>Home page</h1>} />\n      <Route path=\"people\" element={<PeoplePage />} />\n\n      <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}